spring:
  application:
    name: order
  cloud:
    config:
      discovery:
        enabled: true
        service-id: CONFIG
      profile: dev
    stream:
      binders:
        product_stock:
          group: order
          content-type: application/json
  redis:
    host: 192.168.1.109
    port: 6379
  rabbitmq:
      host: 192.168.1.109
      port: 5672
      username: kay
      password: 123456
# zipkin监控中心配置
  zipkin:
    base-url: http://192.168.1.109:9411/
# 如果项目里引用了RabbitMQ依赖，会把数据发送到mq， 不会通过http方式发到zipkin服务端了（RABBIT, KAFKA, WEB;） 解决方案配置成web
    sender:
      type: web
# 展现监控数据抽样百分比
  sleuth:
    sampler:
      probability: 1
# 全局默认的等待服务返回时间
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
# 方法名称为 getProductInfo 的方法等待服务时间
    getProductInfo:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
# feign 结合hystrix 服务降级
feign:
  hystrix:
    enabled: true
management:
  context-path: /
# 将org.springframework.cloud.openfeign包下的日子级别调整成debug
logging:
  level:
    org.springframework.cloud.openfeign: debug